{"version":3,"file":"static/js/136.5441543b.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://social-network-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social-network-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\n\ntype ProfileStatusPropsType = {\n    status: string,\n    updateStatus: (status: string) => void\n}\n\nconst ProfileStatus = (props: ProfileStatusPropsType) => {\n\n    const [editeMode, setEditeMode] = useState<boolean>(false)\n    const [status, setStatus] = useState<string>(props.status)\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status])\n\n    const activateEditeMode = () => {\n        setEditeMode(true)\n    }\n\n    const deactivateEditeMode = () => {\n        setEditeMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n            setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div>\n            {!editeMode &&\n                <div>\n                    <span onDoubleClick={activateEditeMode}>{status || '------'}</span>\n                </div>\n            }\n            {editeMode &&\n                <div>\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditeMode}\n                           value={status}/>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {Preloader} from '../../common/Preloader/Preloader';\r\nimport {ProfileInfoType} from '../../redux/profile-reducer';\r\nimport ProfileStatus from './ProfileStatusWithHooks'\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: null | ProfileInfoType,\r\n    status: string,\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}: ProfileInfoPropsType) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} alt=\"\"/>\r\n                <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n                <div>{profile.fullName}</div>\r\n                <div>{profile.aboutMe}</div>\r\n                <div>{profile.contacts.vk}</div>\r\n                <div>{profile.contacts.instagram}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postBlock\":\"MyPosts_postBlock__dvM-z\",\"posts\":\"MyPosts_posts__GSiZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\",\"like\":\"Post_like__+fQP+\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\ntype PropsType = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nconst Post = (props: PropsType) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://hips.hearstapps.com/digitalspyuk.cdnds.net/14/36/ustv-friends-10.jpg?crop=1.00xw:0.735xh;0,0.0217xh&resize=480:*' alt={'LisaK'}/>\r\n        {props.message}\r\n          <div>\r\n        <span className={s.like}>like </span><span className={s.like}>{props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport {PostType} from '../../redux/profile-reducer';\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\nimport {FieldCreator} from '../../common/Forms controls/FormsControls';\n\n\ntype MyPostsPropsType = {\n    posts: Array<PostType>\n    addPost: (newPost: string) => void\n}\ntype FormDataType = {\n    newPostText: string\n}\nconst maxlength10 = maxLengthCreator(10)\n\nconst MyPosts = React.memo((props: MyPostsPropsType) => {\n\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id}/>)\n\n    const addPost = (values: FormDataType) => {\n        props.addPost(values.newPostText)\n    }\n\n    return (\n        <div className={s.postBlock}>\n            <h3>My posts</h3>\n            <div>\n                <AddPostFormRedux onSubmit={addPost}/>\n            </div>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n})\n\nconst AddNewPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={FieldCreator}\n                       name='newPostText'\n                       placeholder='Post message'\n                       validate={[required, maxlength10]}\n                       typeField='textarea'/>\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\nconst AddPostFormRedux = reduxForm<FormDataType>({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\n\nexport default MyPosts;","import MyPosts from './MyPosts/MyPosts';\nimport {addPostActionCreator, PostType} from '../redux/profile-reducer';\nimport {connect} from 'react-redux';\nimport {AppStateType} from '../redux/redux-store';\nimport {Dispatch} from 'redux';\n\ntype MapStateToPropsType = {\n    posts: Array<PostType>,\n}\n\ntype MapDispatchToPropsType = {\n    addPost: (newPostText: string) => void\n}\n\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        posts: state.profilePage.posts\n    }\n}\n\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n    return {\n        addPost: (newPostText: string) => {\n            dispatch(addPostActionCreator(newPostText))\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPostsContainer';\nimport {ProfileInfoType} from '../redux/profile-reducer';\n\ntype ProfilePropsType = {\n    profile: null | ProfileInfoType,\n    status: string,\n    updateStatus: (status: string) => void\n}\n\nconst Profile = (props: ProfilePropsType) => {\n    return (\n\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostsContainer/>\n        </div>\n    )\n}\n\nexport default Profile;","import React, {ComponentType} from 'react';\nimport Profile from './Profile';\nimport {connect} from 'react-redux';\nimport {getStatus, getUsersProfile, ProfileInfoType, updateStatus} from '../redux/profile-reducer';\nimport {AppStateType} from '../redux/redux-store';\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\nimport {compose} from 'redux';\n\ntype MapStateToPropsType = {\n    profile: null | ProfileInfoType,\n    status: string,\n    authorizedUserId: string,\n    isAuth: boolean,\n}\ntype MapDispatchToPropsType = {\n    getUsersProfile: (userId: string) => void\n    getStatus: (userId: string) => void\n    updateStatus: (status: string) => void\n}\ntype PathParamsType = {\n    userId: string,\n}\ntype ProfileContainerPropsType = RouteComponentProps<PathParamsType> & MapStateToPropsType & MapDispatchToPropsType\n\n\nclass ProfileContainer extends React.Component <ProfileContainerPropsType> {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.authorizedUserId // '20235' - мой id\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getUsersProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    render () {\n        return (\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state: AppStateType) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.id,\n    isAuth: state.auth.isAuth,\n})\n\nexport default compose<ComponentType>(\n    connect(mapStateToProps, {getUsersProfile, getStatus, updateStatus}),\n    withRouter,\n   //    withAuthRedirect\n)(ProfileContainer)","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["props","useState","editeMode","setEditeMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","className","s","src","photos","large","alt","fullName","aboutMe","contacts","vk","instagram","Preloader","message","likesCount","maxlength10","maxLengthCreator","MyPosts","React","postsElements","posts","map","p","id","AddPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","FieldCreator","name","placeholder","validate","required","typeField","connect","state","profilePage","dispatch","addPostActionCreator","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUsersProfile","getStatus","compose","auth","isAuth","withRouter","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","length","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}